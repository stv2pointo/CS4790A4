@model CS4790A4.ViewModels.ProposalScores
@{
    ViewBag.Title = "Score Proposal";
}


<h2>Rate @ViewBag.proposalName</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.proposal.Id, new { htmlAttributes = new { @class = "form-control" } })
        @Html.HiddenFor(model => model.proposal.proposalName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.HiddenFor(model => model.proposal.isComplete, new { htmlAttributes = new { @class = "form-control" } })
        @Html.HiddenFor(model => model.proposal.imagePath, new { htmlAttributes = new { @class = "form-control" } })

        @for (int i=0; i<Model.scoresViews.Count;i++)
        {
            <div class="form-group">
                @Html.Label(Model.scoresViews[i].criteria.CriteriaName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-1">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => Model.scoresViews[i].score.Id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => Model.scoresViews[i].score.proposalId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => Model.scoresViews[i].score.criteriaId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => Model.scoresViews[i].score.editedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => Model.scoresViews[i].score.editTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => Model.scoresViews[i].criteria.Id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => Model.scoresViews[i].criteria.CriteriaName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => Model.scoresViews[i].criteria.description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => Model.scoresViews[i].criteria.ratingsSugg, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => Model.scoresViews[i].criteria.maxScore, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.EditorFor(model => Model.scoresViews[i].score.givenScore, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.scoresViews[i].score.givenScore, "", new { @class = "text-danger" })
                </div>

            </div>

        }
       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}




